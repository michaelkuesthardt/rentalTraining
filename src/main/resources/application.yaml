management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: ["*"]
      path-mapping:
        prometheus: metrics
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: always
    prometheus:
      enabled: true
  metrics:
    enable:
      jvm: true
      logback: false
      process:
        files: false
        uptime: true
        cpu: true
      system:
        cpu: false
  server:
    port: 9091
server:
  error:
    whitelabel:
      enabled: false
  port: 8080
spring:
  profiles:
    active: production
  application:
    name: "RentalDemo Service"
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: com.sixt.rental.demo.integration.kafka.serde.RawBookEventSerializer
      acks: all
      compression-type: lz4
    listener:
      ack-mode: manual_immediate
  datasource:
    url: jdbc:postgresql://localhost:5555/rental
    username: rental
    password: rental
  jpa:
    properties:
#      uncomment for JPA script creation
#      javax:
#        persistence:
#          schema-generation:
#            create-source: metadata
#            scripts:
#              action: create
#              create-target: src/main/resources/db/migration/V001__create_tables.sql
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  #   comment if you use flyway - It's not a good idea to rely on automatic creation of migrations
#    hibernate:
#      ddl-auto: update
  flyway:
    enabled: true
rental-service:
  topics:
    event-producer: "book-lifecycle-events"