buildscript {
    ext {
        protobufVersion = '3.7.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE')
        classpath('com.google.protobuf:protobuf-gradle-plugin:0.8.8')
    }
}


plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.google.protobuf' version '0.8.10'
    id 'idea'
}

group = 'com.sixt.rental'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.1'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    runtimeOnly "org.flywaydb:flyway-core:6.0.7"
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/generated"
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {}
            }
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java")
    }
}

test {
    useJUnitPlatform()
}
